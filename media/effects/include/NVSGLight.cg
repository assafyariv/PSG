// Copyright NVIDIA Corporation 2002-2004
// TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SOFTWARE IS PROVIDED
// *AS IS* AND NVIDIA AND ITS SUPPLIERS DISCLAIM ALL WARRANTIES, EITHER EXPRESS
// OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY
// AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO EVENT SHALL NVIDIA OR ITS SUPPLIERS
// BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES
// WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS,
// BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER PECUNIARY LOSS)
// ARISING OUT OF THE USE OF OR INABILITY TO USE THIS SOFTWARE, EVEN IF NVIDIA HAS
// BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES 

/** @file */

//! The NVSGLight structure specifies the data layout for an effect light parameter.
/** A parameter of type NVSGLight will be automatic bound to a tree light in NVSG. */
struct NVSGLight
{
  float4 ambient;                //!< Specifies the ambient RGBA intensity of the light.
  float4 diffuse;                //!< Specifies the diffuse RGBA intensity of the light.
  float4 specular;               //!< Specifies the specular RGBA intensity of the light.
  float4 position;               //!< Specifies the light position in world coordinates.
  float4 direction;              //!< Specifies the light direction in world coordinates.
  float  spotExponent;           //!< Specifies the intensity distribution of the light.
  float  spotCutoff;             //!< Specifies the maximum spread angle of the light.
  float  constantAttenuation;    //!< Specifies the constant light attenuation factor.
  float  linearAttenuation;      //!< Specifies the linear light attenuation factor.
  float  quadraticAttenuation;   //!< Specifies the quadratic light attenuation factor.
};